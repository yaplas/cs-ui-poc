{"version":3,"sources":["components/ScanForm/Layout.tsx","components/ScanForm/index.tsx","components/AssetDetail/LabelValue.tsx","components/AssetDetail/WhoIs.tsx","components/AssetDetail/OpenPorts.tsx","components/AssetDetail/Reputation.tsx","redux/hooks.ts","io/assets.ts","redux/slices/assets.ts","components/Loading/index.tsx","components/AssetDetail/index.tsx","components/AssetsSummary/Layout.tsx","components/AssetsSummary/OpenPortsChart.tsx","components/AssetsSummary/ProductsChart.tsx","components/AssetsSummary/FullChartLayout.tsx","components/AssetsSummary/AssetList.tsx","components/AssetsSummary/CvesChart.tsx","components/AssetsSummary/index.tsx","components/CveList/index.tsx","components/CveDetail/index.tsx","components/ScanResult/index.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["FormLayout","children","searchInput","submitButton","submitStatus","Grid","container","spacing","item","xs","alignItems","cveRegex","noIpRegex","ScanForm","history","useHistory","formik","useFormik","initialValues","search","onSubmit","setSubmitting","push","test","includes","handleSubmit","TextField","name","id","label","onChange","handleChange","value","values","error","Boolean","touched","errors","helperText","fullWidth","Button","variant","type","disabled","isSubmitting","LabelValue","Box","Typography","component","WhoIs","whoIs","scanInfo","ip","p","domains","join","src","countryCode","country","regionName","city","timezone","org","justify","lat","lon","OpenPorts","params","useParams","autoHeight","hideFooter","rows","ports","map","port","serviceName","service","productName","product","productVersion","version","vulnerabilities","uniq","flatMap","vul","Array","from","matchAll","trim","columns","field","headerName","width","flex","renderCell","cves","slice","cve","to","style","marginRight","length","btoa","Reputation","reputation","events","timestamp","rest","date","Date","toISOString","hide","useAppDispatch","useDispatch","useAppSelector","useSelector","URL","cache","LRU","max","maxAge","getFromCache","key","getter","a","has","get","set","fetchJsonFromUrl","url","fetch","json","fetchJson","path","fetchWhoIs","fetchDetailByIp","Promise","all","isEmpty","undefined","fetchSummaryByIpRange","range","openPorts","products","score","gradeImg","grade_url","fetchCveDetail","summary","fetchAssetDetailByIp","createAsyncThunk","fetchAssetsSummaryByIpRange","fetchAssetListByRangeAndPort","fetchListByRangeAndPort","fetchAssetListByRangeAndProduct","fetchListByRangeAndProduct","fetchAssetListByRangeAndCve","fetchListByRangeAndCve","fetchCveDetailByCveId","assetsSlice","createSlice","initialState","detail","list","reducers","extraReducers","fulfilled","toString","state","action","data","payload","pending","Loading","display","justifyContent","CircularProgress","Asset","assets","dispatch","useEffect","Layout","title","border","borderColor","pr","height","OpenPortsChart","limit","entries","ResponsiveContainer","BarChart","sort","b","count","margin","top","right","left","bottom","layout","XAxis","axisLine","YAxis","yAxisId","dataKey","orientation","tickLine","mirror","tick","transform","Bar","fill","cursor","onClick","ProductsChart","productAndVersion","encodeURIComponent","AssetList","Number","flexDirection","pathname","CvesChart","AssetsSummary","FullChartLayout","CveList","atob","split","CveDetail","pl","pt","ScanResult","AssetDetail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","assetsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e30f65d.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst FormLayout = ({\n  children: [searchInput, submitButton, submitStatus],\n}: {\n  children: JSX.Element[];\n}): JSX.Element => (\n  <Grid container spacing={1}>\n    <Grid item xs={3}>\n      {searchInput}\n    </Grid>\n    <Grid item xs={1} container alignItems=\"flex-end\">\n      {submitButton}\n    </Grid>\n    <Grid item xs={1} container alignItems=\"flex-end\">\n      {submitStatus}\n    </Grid>\n  </Grid>\n);\n\nexport default FormLayout;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Layout from \"./Layout\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\n\nconst cveRegex = /CVE-[0-9]+-[0-9]+/iu;\nconst noIpRegex = /[a-zA-z]/u;\n// const ipRegex = /^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$/u;\n// const rangeRegex = /^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}-[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$/u;\n\nconst ScanForm = (): JSX.Element => {\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: { search: \"\" },\n    onSubmit: ({ search }, { setSubmitting }) => {\n      setSubmitting(false);\n      history.push(\n        cveRegex.test(search)\n          ? `/cve-detail/${search}`\n          : noIpRegex.test(search) || search.includes(\"-\")\n          ? `/summary/${search}`\n          : `/detail/${search}`\n      );\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Layout>\n        <TextField\n          name=\"search\"\n          id=\"search\"\n          label=\"ip or ip range\"\n          onChange={formik.handleChange}\n          value={formik.values.search}\n          error={\n            Boolean(formik.values.search) &&\n            formik.touched.search &&\n            Boolean(formik.errors.search)\n          }\n          helperText={\n            Boolean(formik.values.search) &&\n            formik.touched.search &&\n            formik.errors.search\n          }\n          fullWidth\n        />\n\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={formik.isSubmitting}\n        >\n          Scan\n        </Button>\n      </Layout>\n    </form>\n  );\n};\n\nexport default ScanForm;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst LabelValue = ({\n  label,\n  children,\n}: {\n  label: string;\n  children: React.ReactNode;\n}): JSX.Element => (\n  <Box>\n    <Grid container item xs={12} spacing={3}>\n      <Grid item xs={3}>\n        <Typography variant=\"h6\" component=\"span\">\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant=\"h6\" component=\"span\">\n          {children}\n        </Typography>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default LabelValue;\n","import Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { AssetDetailPayload } from \"../../io/assets\";\nimport LabelValue from \"./LabelValue\";\n\nconst WhoIs = ({ whoIs, scanInfo, ip }: AssetDetailPayload): JSX.Element => (\n  <Box p={2}>\n    <Grid container>\n      <Grid item xs={6}>\n        <LabelValue label=\"IP:\">{ip}</LabelValue>\n        <LabelValue label=\"Host:\">\n          {(scanInfo?.domains || []).join(\", \")}\n        </LabelValue>\n        <LabelValue label=\"Country:\">\n          <Grid container>\n            <Grid item xs={1}>\n              <img\n                src={`https://www.countryflags.io/${whoIs.countryCode}/flat/32.png`}\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <span>{whoIs.country}</span>\n            </Grid>\n          </Grid>\n        </LabelValue>\n        <LabelValue label=\"Region:\">{whoIs.regionName}</LabelValue>\n        <LabelValue label=\"City:\">{whoIs.city}</LabelValue>\n        <LabelValue label=\"Timezone:\">{whoIs.timezone}</LabelValue>\n        <LabelValue label=\"Organization:\">{whoIs.org || \"-\"}</LabelValue>\n      </Grid>\n      <Grid item container xs={6} justify=\"center\">\n        <img\n          src={`https://maps.googleapis.com/maps/api/staticmap?key=AIzaSyBWpkWkfxS1nX1JDqhKNuZb8ell4jHWjt4&center=${whoIs.lat},${whoIs.lon}&zoom=5&size=600x350&markers=color:red|${whoIs.lat},${whoIs.lon}&language=en`}\n        />\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default WhoIs;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { uniq, trim } from \"ramda\";\nimport { AssetDetailPayload } from \"../../io/assets\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst OpenPorts = ({ scanInfo }: AssetDetailPayload): JSX.Element => {\n  const params = useParams<{ ip: string }>();\n\n  if (!scanInfo) {\n    return <div />;\n  }\n\n  return (\n    <Box p={2}>\n      <Box p={2}>\n        <Typography variant=\"h5\">Open Ports, Products and CVE's</Typography>\n      </Box>\n      <DataGrid\n        autoHeight\n        hideFooter\n        rows={scanInfo.ports.map((port) => ({\n          ...port,\n          serviceName: port.service.name,\n          productName: port.service.product?.name,\n          productVersion: port.service.product?.version,\n          vulnerabilities: uniq(\n            port.vulnerabilities.flatMap((vul) =>\n              Array.from(vul.matchAll(/CVE-\\d+-\\d+/g))\n                .map(([match]) => match)\n                .map(trim)\n            )\n          ),\n        }))}\n        columns={[\n          { field: \"id\", headerName: \"Port\" },\n          { field: \"serviceName\", headerName: \"Service\", width: 120 },\n          { field: \"productName\", headerName: \"Product\", width: 320 },\n          { field: \"productVersion\", headerName: \"Version\", width: 220 },\n          {\n            field: \"vulnerabilities\",\n            headerName: \"Vulnerabilities\",\n            flex: 900,\n            renderCell: ({ value, id }) => {\n              const cves = value as string[];\n              return (\n                <Box>\n                  {cves.slice(0, 4).map((cve) => (\n                    <Link\n                      key={cve}\n                      to={`/cve-detail/${cve}`}\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      {cve}\n                    </Link>\n                  ))}\n                  {cves.length > 4 && (\n                    <Link\n                      to={`/detail/${params.ip}/port/${id}/cve-list/${btoa(\n                        `${cves.join(\",\")}`\n                      )}`}\n                    >\n                      see more\n                    </Link>\n                  )}\n                </Box>\n              );\n            },\n          },\n        ]}\n      />\n    </Box>\n  );\n};\n\nexport default OpenPorts;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AssetDetailPayload } from \"../../io/assets\";\n\nconst Reputation = ({ scanInfo }: AssetDetailPayload): JSX.Element => {\n  if (!scanInfo) {\n    return <div />;\n  }\n\n  const { reputation } = scanInfo;\n\n  return (\n    <Box p={2}>\n      <Box p={2}>\n        <Typography variant=\"h5\">Malicious Reputation</Typography>\n      </Box>\n      {reputation.events.length ? (\n        <DataGrid\n          autoHeight\n          hideFooter\n          rows={reputation.events.map(({ timestamp, ...rest }) => ({\n            date: new Date(timestamp * 1000).toISOString(),\n            ...rest,\n          }))}\n          columns={[\n            { field: \"di\", hide: true },\n            { field: \"date\", headerName: \"Date\", width: 350 },\n            { field: \"category\", headerName: \"Category\", width: 250 },\n            { field: \"type\", headerName: \"Type\", width: 220 },\n            { field: \"info\", headerName: \"Info\", flex: 900 },\n          ]}\n        />\n      ) : (\n        <Box p={2}>\n          <Typography variant=\"button\">\n            No malicious reputation events observed{\" \"}\n          </Typography>{\" \"}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Reputation;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import LRU from \"lru-cache\";\nimport { isEmpty } from \"ramda\";\n\nconst URL = \"https://elegant-paper-joke.glitch.me\";\n\nconst cache = new LRU({\n  max: 500,\n  maxAge: 1000 * 60 * 60,\n});\n\nconst getFromCache = async (\n  key: string,\n  getter: (key: string) => Promise<any>\n) => {\n  if (cache.has(key)) {\n    return cache.get(key);\n  }\n  const value = await getter(key);\n  cache.set(key, value);\n  return value;\n};\n\nconst fetchJsonFromUrl = async (url: string) => (await fetch(url)).json();\n\nconst fetchJson = async (path: string) =>\n  getFromCache(`${URL}/${path}`, fetchJsonFromUrl);\n\nconst fetchWhoIs = async (ip: string) =>\n  getFromCache(`${URL}/assets/${ip}/whois`, fetchJsonFromUrl);\n\nexport const fetchDetailByIp = async (\n  ip: string\n): Promise<AssetDetailPayload> => {\n  const [scanInfo, whoIs] = await Promise.all([\n    fetchJson(`assets/${ip}`),\n    fetchWhoIs(ip),\n  ]);\n\n  return { ip, scanInfo: isEmpty(scanInfo) ? undefined : scanInfo, whoIs };\n};\n\nexport const fetchSummaryByIpRange = async (\n  range: string\n): Promise<AssetsSummaryPayload> => {\n  const [openPorts, products, cves] = await Promise.all([\n    fetchJson(`assets/${range}/open-ports`),\n    fetchJson(`assets/${range}/products`),\n    fetchJson(`assets/${range}/cves`),\n  ]);\n  const score = /[a-zA-Z]/u.test(range)\n    ? ((await fetchJson(`scores/${range}`)) as {\n        score: number;\n        grade_url: string;\n      })\n    : undefined;\n  return {\n    range,\n    openPorts,\n    products,\n    cves,\n    score: score && { value: score.score, gradeImg: score.grade_url },\n  };\n};\n\nexport const fetchListByRangeAndPort = (\n  range: string,\n  port: number\n): Promise<AssetListPayload> => fetchJson(`assets/${range}/open-ports/${port}`);\n\nexport const fetchListByRangeAndCve = (\n  range: string,\n  cve: string\n): Promise<AssetListPayload> => fetchJson(`assets/${range}/cves/${cve}`);\n\nexport const fetchListByRangeAndProduct = (\n  range: string,\n  product: string,\n  version: string\n): Promise<AssetListPayload> =>\n  fetchJson(`assets/${range}/products/${product}/${version}`);\n\nexport const fetchCveDetail = async (\n  cve: string\n): Promise<CveDetailPayload> => {\n  const { summary, events } = await fetchJson(`cves/${cve}`);\n\n  return { cve, summary, events };\n};\n\nexport type CveDetailPayload = {\n  cve: string;\n  summary: string;\n  events: {\n    id: string;\n    timestamp: number;\n    category: string;\n    type: string;\n    info: string;\n  }[];\n};\n\nexport type AssetsSummaryPayload = {\n  range: string;\n  openPorts: { entries: { port: number; count: number }[] };\n  products: {\n    entries: { product: string; version: string; count: number }[];\n  };\n  cves: {\n    entries: { cve: string; count: number }[];\n  };\n  score?: {\n    value: number;\n    gradeImg: string;\n  };\n};\n\nexport type AssetDetailPayload = {\n  ip: string;\n  scanInfo?: {\n    domains: string[];\n    ports: {\n      id: string;\n      protocol: string;\n      service: {\n        name: string;\n        product?: { name: string; version: string };\n      };\n      vulnerabilities: string[];\n    }[];\n    reputation: {\n      events: {\n        id: string;\n        timestamp: number;\n        category: string;\n        type: string;\n        info: string;\n      }[];\n    };\n  };\n  whoIs: {\n    country: string;\n    countryCode: string;\n    regionName: string;\n    city: string;\n    lat: number;\n    lon: number;\n    timezone: string;\n    org: string;\n  };\n};\n\nexport type AssetListPayload = {\n  entries: { ip: string }[];\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  fetchDetailByIp,\n  fetchSummaryByIpRange,\n  fetchListByRangeAndPort,\n  fetchListByRangeAndProduct,\n  fetchCveDetail,\n  AssetDetailPayload,\n  AssetsSummaryPayload,\n  AssetListPayload,\n  CveDetailPayload,\n  fetchListByRangeAndCve,\n} from \"../../io/assets\";\n\nexport const fetchAssetDetailByIp = createAsyncThunk(\n  \"assets/fetchDetailByIp\",\n  (ip: string) => fetchDetailByIp(ip)\n);\n\nexport const fetchAssetsSummaryByIpRange = createAsyncThunk(\n  \"assets/fetchSummaryByIpRange\",\n  (range: string) => fetchSummaryByIpRange(range)\n);\n\nexport const fetchAssetListByRangeAndPort = createAsyncThunk(\n  \"assets/fetchListByRangeAndPort\",\n  ({ range, port }: { range: string; port: number }) =>\n    fetchListByRangeAndPort(range, port)\n);\n\nexport const fetchAssetListByRangeAndProduct = createAsyncThunk(\n  \"assets/fetchListByRangeAndProduct\",\n  ({\n    range,\n    product,\n    version,\n  }: {\n    range: string;\n    product: string;\n    version: string;\n  }) => fetchListByRangeAndProduct(range, product, version)\n);\n\nexport const fetchAssetListByRangeAndCve = createAsyncThunk(\n  \"assets/fetchListByRangeAndCve\",\n  ({ range, cve }: { range: string; cve: string }) => fetchListByRangeAndCve(range, cve)\n);\n\nexport const fetchCveDetailByCveId = createAsyncThunk(\n  \"assets/fetchCveDetailByCveId\",\n  (cve: string) => fetchCveDetail(cve)\n);\n\nconst assetsSlice = createSlice({\n  name: \"assets\",\n  initialState: {\n    detail: {},\n    summary: {},\n    list: {},\n    cve: {\n      detail: {},\n    },\n  } as {\n    detail: {\n      data?: AssetDetailPayload;\n      unavailable?: boolean;\n    };\n    summary: {\n      data?: AssetsSummaryPayload;\n      unavailable?: boolean;\n    };\n    list: {\n      data?: AssetListPayload;\n      unavailable?: boolean;\n    };\n    cve: {\n      detail: {\n        data?: CveDetailPayload;\n        unavailable?: boolean;\n      };\n    };\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAssetDetailByIp.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<AssetDetailPayload>\n    ) => {\n      state.detail = { data: action.payload };\n    },\n    [fetchAssetDetailByIp.pending.toString()]: (state) => {\n      state.detail = {};\n    },\n    [fetchAssetsSummaryByIpRange.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<AssetsSummaryPayload>\n    ) => {\n      state.summary = { data: action.payload };\n    },\n    [fetchAssetsSummaryByIpRange.pending.toString()]: (state) => {\n      state.summary = {};\n    },\n    [fetchAssetListByRangeAndPort.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<AssetListPayload>\n    ) => {\n      state.list = { data: action.payload };\n    },\n    [fetchAssetListByRangeAndPort.pending.toString()]: (state) => {\n      state.list = {};\n    },\n    [fetchAssetListByRangeAndProduct.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<AssetListPayload>\n    ) => {\n      state.list = { data: action.payload };\n    },\n    [fetchAssetListByRangeAndProduct.pending.toString()]: (state) => {\n      state.list = {};\n    },\n    [fetchAssetListByRangeAndCve.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<AssetListPayload>\n    ) => {\n      state.list = { data: action.payload };\n    },\n    [fetchAssetListByRangeAndCve.pending.toString()]: (state) => {\n      state.list = {};\n    },\n    [fetchCveDetailByCveId.fulfilled.toString()]: (\n      state,\n      action: PayloadAction<CveDetailPayload>\n    ) => {\n      state.cve.detail = { data: action.payload };\n    },\n    [fetchCveDetailByCveId.pending.toString()]: (state) => {\n      state.cve.detail = {};\n    },\n  },\n});\n\nexport default assetsSlice.reducer;\n","import Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst Loading = (): JSX.Element => (\n  <Box display=\"flex\" justifyContent=\"center\">\n    <CircularProgress />\n  </Box>\n);\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport WhoIs from \"./WhoIs\";\nimport OpenPorts from \"./OpenPorts\";\nimport Reputation from \"./Reputation\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchAssetDetailByIp } from \"../../redux/slices/assets\";\nimport Loading from \"../Loading\";\n\nconst Asset = (): JSX.Element => {\n  const detail = useAppSelector((state) => state.assets.detail);\n  const params = useParams<{ ip: string }>();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAssetDetailByIp(params.ip));\n  }, [params.ip]);\n\n  if (!detail.data) {\n    return <Loading />;\n  }\n\n  return (\n    <Box p={2}>\n      <WhoIs {...detail.data} />\n      <OpenPorts {...detail.data} />\n      <Reputation {...detail.data} />\n    </Box>\n  );\n};\n\nexport default Asset;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst Layout = ({\n  title,\n  score,\n  gradeImg,\n  children: [ports, products, cves],\n}: {\n  title: string;\n  score?: number;\n  gradeImg?: string;\n  children: JSX.Element[];\n}): JSX.Element => (\n  <Box>\n    <Box p={3} display=\"flex\" justifyContent=\"center\">\n      <Box p={2}>\n        <Typography variant=\"h4\" component=\"div\">\n          {title}\n        </Typography>\n      </Box>\n      {score && (\n        <Box\n          p={2}\n          border={1}\n          borderColor=\"grey.500\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Box pr={3}>\n            <Typography variant=\"h4\" component=\"div\">\n              {score}\n            </Typography>\n          </Box>\n          <Box>\n            <img src={gradeImg} style={{ width: \"40px\", height: \"40px\" }} />\n          </Box>\n        </Box>\n      )}\n    </Box>\n    <Grid container spacing={2}>\n      <Grid container item xs={6} justify=\"center\">\n        <Typography variant=\"h5\" component=\"div\">\n          Open Ports\n        </Typography>\n      </Grid>\n      <Grid container item xs={6} justify=\"center\">\n        <Typography variant=\"h5\" component=\"div\">\n          Products\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Box border={1} borderColor=\"grey.500\" height={550}>\n          {ports}\n        </Box>\n      </Grid>\n      <Grid item xs={6}>\n        <Box border={1} borderColor=\"grey.500\" height={550}>\n          {products}\n        </Box>\n      </Grid>\n      <Grid container item xs={6} justify=\"center\">\n        <Typography variant=\"h5\" component=\"div\">\n          CVE's\n        </Typography>\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={6}>\n        <Box border={1} borderColor=\"grey.500\" height={550}>\n          {cves}\n        </Box>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { useAppSelector } from \"../../redux/hooks\";\n\nconst OpenPortsChart = ({ limit }: { limit?: number }): JSX.Element => {\n  const history = useHistory();\n  const params = useParams<{ range: string }>();\n  const openPorts = useAppSelector(\n    (state) => state.assets.summary.data?.openPorts\n  );\n  const barClickHandler = ({ port }: { port: number }) =>\n    history.push(`/summary/${params.range}/open-ports/${port}/assets`);\n\n  if (!openPorts || openPorts.entries.length === 0) {\n    return <div />;\n  }\n\n  return (\n    <Box>\n      <ResponsiveContainer\n        width={\"100%\"}\n        height={100 * (limit || openPorts.entries.length)}\n      >\n        <BarChart\n          data={openPorts.entries\n            .slice()\n            .sort((a, b) => (a.count < b.count ? 1 : -1))\n            .slice(0, limit)}\n          margin={{\n            top: 20,\n            right: 80,\n            left: 80,\n            bottom: 5,\n          }}\n          layout=\"vertical\"\n        >\n          <XAxis hide axisLine={false} type=\"number\" />\n          <YAxis\n            yAxisId={0}\n            dataKey=\"port\"\n            orientation=\"left\"\n            type=\"category\"\n            tickLine={false}\n            axisLine={false}\n          />\n          <YAxis\n            yAxisId={1}\n            dataKey=\"count\"\n            orientation=\"right\"\n            mirror\n            type=\"category\"\n            axisLine={false}\n            tickLine={false}\n            tick={{\n              transform: `translate(${50}, 0)`,\n            }}\n          />\n          <Bar\n            dataKey=\"count\"\n            name=\"Assets\"\n            fill=\"#8884d8\"\n            cursor=\"pointer\"\n            onClick={barClickHandler}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n      {limit && openPorts.entries.length > limit && (\n        <Box p={2}>\n          <Link to={`/summary/${params.range}/open-ports`}>see more</Link>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default OpenPortsChart;\n","import React from \"react\";\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ProductsChart = ({ limit }: { limit?: number }): JSX.Element => {\n  const history = useHistory();\n  const params = useParams<{ range: string }>();\n  const products = useAppSelector(\n    (state) => state.assets.summary.data?.products\n  );\n  const barClickHandler = ({\n    product,\n    version,\n  }: {\n    product: string;\n    version: string;\n  }) =>\n    history.push(\n      `/summary/${params.range}/products/${encodeURIComponent(\n        product\n      )}/${encodeURIComponent(version || \"-\")}/assets`\n    );\n\n  if (!products || products.entries.length === 0) {\n    return <div />;\n  }\n\n  return (\n    <Box>\n      <ResponsiveContainer\n        width={\"100%\"}\n        height={100 * (limit || products.entries.length)}\n      >\n        <BarChart\n          data={products.entries\n            .slice()\n            .sort((a, b) => (a.count < b.count ? 1 : -1))\n            .slice(0, limit)\n            .map(({ product, version, count }) => ({\n              productAndVersion: `${product} ${version || \"\"}`,\n              product,\n              version,\n              count,\n            }))}\n          margin={{\n            top: 20,\n            right: 80,\n            left: 80,\n            bottom: 5,\n          }}\n          layout=\"vertical\"\n        >\n          <XAxis hide axisLine={false} type=\"number\" />\n          <YAxis\n            yAxisId={0}\n            dataKey=\"productAndVersion\"\n            orientation=\"left\"\n            type=\"category\"\n            tickLine={false}\n            axisLine={false}\n          />\n          <YAxis\n            yAxisId={1}\n            dataKey=\"count\"\n            orientation=\"right\"\n            mirror\n            type=\"category\"\n            axisLine={false}\n            tickLine={false}\n            tick={{\n              transform: `translate(${50}, 0)`,\n            }}\n          />\n          <Bar\n            dataKey=\"count\"\n            name=\"Assets\"\n            fill=\"#8884d8\"\n            cursor=\"pointer\"\n            onClick={barClickHandler}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n\n      {limit && products.entries.length > limit && (\n        <Box p={2}>\n          <Link to={`/summary/${params.range}/products`}>see more</Link>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ProductsChart;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst Layout = ({\n  title,\n  children,\n}: {\n  title: string;\n  children: React.ReactNode;\n}): JSX.Element => (\n  <Box>\n    <Box p={2}>\n      <Typography variant=\"h5\" component=\"div\">\n        {title}\n      </Typography>\n    </Box>\n    <Box>{children}</Box>\n  </Box>\n);\n\nexport default Layout;\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport {\n  fetchAssetListByRangeAndPort,\n  fetchAssetListByRangeAndProduct,\n  fetchAssetListByRangeAndCve,\n} from \"../../redux/slices/assets\";\nimport Loading from \"../Loading\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AssetList = (): JSX.Element => {\n  const list = useAppSelector((state) => state.assets.list.data);\n  const params = useParams<{\n    range: string;\n    port: string;\n    product: string;\n    version: string;\n    cve: string;\n  }>();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (params.product) {\n      dispatch(\n        fetchAssetListByRangeAndProduct({\n          range: params.range,\n          product: params.product,\n          version: params.version,\n        })\n      );\n    } else if (params.cve) {\n      dispatch(\n        fetchAssetListByRangeAndCve({ range: params.range, cve: params.cve })\n      );\n    } else {\n      dispatch(\n        fetchAssetListByRangeAndPort({\n          range: params.range,\n          port: Number(params.port),\n        })\n      );\n    }\n  }, [params.range, params.port, params.product, params.version]);\n\n  if (!list) {\n    return <Loading />;\n  }\n\n  return (\n    <Box p={2} display=\"flex\" flexDirection=\"column\">\n      <Box p={1}>\n        {params.port && !params.cve && (\n          <Typography variant=\"h6\">\n            Assets from {params.range} with port {params.port} open\n          </Typography>\n        )}\n        {params.product && (\n          <Typography variant=\"h6\">\n            Assets from {params.range} with product {params.product}{\" \"}\n            {params.version === \"-\" ? \"\" : `(${params.version})`}\n          </Typography>\n        )}\n        {params.cve && (\n          <Typography variant=\"h6\">\n            Assets from {params.range} with {params.cve} detected\n          </Typography>\n        )}\n      </Box>\n      {list.entries.map(({ ip }) => (\n        <Box p={1} key={ip}>\n          <Link to={{ pathname: `/detail/${ip}` }}>{ip}</Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default AssetList;\n","import React from \"react\";\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { useAppSelector } from \"../../redux/hooks\";\n\nconst CvesChart = ({ limit }: { limit?: number }): JSX.Element => {\n  const history = useHistory();\n  const params = useParams<{ range: string }>();\n  const cves = useAppSelector((state) => state.assets.summary.data?.cves);\n  const barClickHandler = ({ cve }: { cve: string }) =>\n    history.push(`/summary/${params.range}/cves/${cve}/assets`);\n\n  if (!cves || cves.entries.length === 0) {\n    return <div />;\n  }\n\n  return (\n    <Box>\n      <ResponsiveContainer\n        width={\"100%\"}\n        height={100 * (limit || cves.entries.length)}\n      >\n        <BarChart\n          data={cves.entries\n            .slice()\n            .sort((a, b) => (a.count < b.count ? 1 : -1))\n            .slice(0, limit)}\n          margin={{\n            top: 20,\n            right: 80,\n            left: 80,\n            bottom: 5,\n          }}\n          layout=\"vertical\"\n        >\n          <XAxis hide axisLine={false} type=\"number\" />\n          <YAxis\n            yAxisId={0}\n            dataKey=\"cve\"\n            orientation=\"left\"\n            type=\"category\"\n            tickLine={false}\n            axisLine={false}\n          />\n          <YAxis\n            yAxisId={1}\n            dataKey=\"count\"\n            orientation=\"right\"\n            mirror\n            type=\"category\"\n            axisLine={false}\n            tickLine={false}\n            tick={{\n              transform: `translate(${50}, 0)`,\n            }}\n          />\n          <Bar\n            dataKey=\"count\"\n            name=\"Assets\"\n            fill=\"#8884d8\"\n            cursor=\"pointer\"\n            onClick={barClickHandler}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n      {limit && cves.entries.length > limit && (\n        <Box p={2}>\n          <Link to={`/summary/${params.range}/cves`}>see more</Link>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default CvesChart;\n","import React, { useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport OpenPortsChart from \"./OpenPortsChart\";\nimport ProductsChart from \"./ProductsChart\";\nimport { Switch, Route, useParams } from \"react-router-dom\";\nimport FullChartLayout from \"./FullChartLayout\";\nimport AssetList from \"./AssetList\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { fetchAssetsSummaryByIpRange } from \"../../redux/slices/assets\";\nimport Loading from \"../Loading\";\nimport CvesChart from \"./CvesChart\";\n\nconst AssetsSummary = (): JSX.Element => {\n  const params = useParams<{ range: string }>();\n  const dispatch = useAppDispatch();\n  const summary = useAppSelector((state) => state.assets.summary);\n  useEffect(() => {\n    dispatch(fetchAssetsSummaryByIpRange(params.range));\n  }, [params.range]);\n\n  if (!summary.data) {\n    return <Loading />;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/summary/:range/open-ports/:port/assets\">\n        <AssetList />\n      </Route>\n      <Route path=\"/summary/:range/products/:product/:version/assets\">\n        <AssetList />\n      </Route>\n      <Route path=\"/summary/:range/cves/:cve/assets\">\n        <AssetList />\n      </Route>\n      <Route path=\"/summary/:range/open-ports\">\n        <FullChartLayout title=\"Open Ports\">\n          <OpenPortsChart />\n        </FullChartLayout>\n      </Route>\n      <Route path=\"/summary/:range/products\">\n        <FullChartLayout title=\"Products\">\n          <ProductsChart />\n        </FullChartLayout>\n      </Route>\n      <Route path=\"/summary/:range/cves\">\n        <FullChartLayout title=\"CVE's\">\n          <CvesChart />\n        </FullChartLayout>\n      </Route>\n      <Route path=\"/summary/:range\">\n        <Layout\n          title={params.range}\n          score={summary.data?.score?.value}\n          gradeImg={summary.data?.score?.gradeImg}\n        >\n          <OpenPortsChart limit={5} />\n          <ProductsChart limit={5} />\n          <CvesChart limit={5} />\n        </Layout>\n      </Route>\n    </Switch>\n  );\n};\n\nexport default AssetsSummary;\n","import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { trim } from \"ramda\";\n\nconst CveList = (): JSX.Element => {\n  const params = useParams<{ list: string; ip: string; port: string }>();\n  const list = atob(params.list).split(\",\").map(trim);\n  return (\n    <Box p={2} display=\"flex\" flexDirection=\"column\">\n      <Box p={1}>\n        <Typography variant=\"h6\">\n          CVE's found for IP {params.ip} on port {params.port}{\" \"}\n        </Typography>\n      </Box>\n      {list.map((cve) => (\n        <Box p={1} key={cve}>\n          <Link to={{ pathname: `/cve-detail/${cve}` }}>{cve}</Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default CveList;\n","import React, { useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { fetchCveDetailByCveId } from \"../../redux/slices/assets\";\nimport Loading from \"../Loading\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst CveDetail = (): JSX.Element => {\n  const params = useParams<{ cve: string }>();\n  const detail = useAppSelector((state) => state.assets.cve.detail);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchCveDetailByCveId(params.cve));\n  }, [params.cve]);\n\n  if (!detail.data) {\n    return <Loading />;\n  }\n\n  return (\n    <Box p={2}>\n      <Box p={1}>\n        <Typography variant=\"h5\">{params.cve}</Typography>\n      </Box>\n      <Box p={1}>\n        <Typography variant=\"h6\">Summary</Typography>\n      </Box>\n      <Box pl={1}>\n        <Typography variant=\"body1\">{detail.data.summary}</Typography>\n      </Box>\n      <Box p={1} pt={3}>\n        <Box p={1}>\n          <Typography variant=\"h6\">Threat Campaigns</Typography>\n        </Box>\n        <DataGrid\n          autoHeight\n          hideFooter\n          rows={detail.data.events.map(({ timestamp, ...rest }) => ({\n            date: new Date(timestamp * 1000).toISOString(),\n            ...rest,\n          }))}\n          columns={[\n            { field: \"di\", hide: true },\n            { field: \"date\", headerName: \"Date\", width: 350 },\n            { field: \"category\", headerName: \"Category\", width: 250 },\n            { field: \"type\", headerName: \"Type\", width: 220 },\n            { field: \"info\", headerName: \"Info\", flex: 900 },\n          ]}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default CveDetail;\n","import React from \"react\";\nimport AssetDetail from \"../AssetDetail\";\nimport AssetsSummary from \"../AssetsSummary\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CveList from \"../CveList\";\nimport CveDetail from \"../CveDetail\";\n\nconst ScanResult = (): JSX.Element => (\n  <Switch>\n    <Route path=\"/detail/:ip/port/:port/cve-list/:list\">\n      <CveList />\n    </Route>\n    <Route path=\"/detail/:ip\">\n      <AssetDetail />\n    </Route>\n    <Route path=\"/summary/:range\">\n      <AssetsSummary />\n    </Route>\n    <Route path=\"/cve-detail/:cve\">\n      <CveDetail />\n    </Route>\n  </Switch>\n);\n\nexport default ScanResult;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ScanForm from \"./components/ScanForm\";\nimport ScanResult from \"./components/ScanResult\";\nimport Box from \"@material-ui/core/Box\";\n\nconst App = (): JSX.Element => (\n  <Box>\n    <Box p={2}>\n      <Typography variant=\"h4\">Sentinel POC</Typography>\n    </Box>\n    <Box p={2}>\n      <ScanForm />\n    </Box>\n    <Box p={2}>\n      <ScanResult />\n    </Box>\n  </Box>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport assetsReducer from \"./slices/assets\";\n\nconst store = configureStore({\n  reducer: {\n    assets: assetsReducer,\n  },\n});\nexport default store;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}